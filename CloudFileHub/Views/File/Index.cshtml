@model FileExplorerViewModel
@{
    ViewData["Title"] = "我的文件";
}

<div class="container fade-in">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="bi bi-folder2-open me-2"></i>文件管理器</h1>
        <div class="btn-group">
            <a asp-action="Upload" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-primary">
                <i class="bi bi-upload me-2"></i>上传文件
            </a>
            <a asp-action="CreateDirectory" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-success">
                <i class="bi bi-folder-plus me-2"></i>新建文件夹
            </a>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-route-directoryId="" class="text-decoration-none">
                            <i class="bi bi-house-door me-1"></i>根目录
                        </a>
                    </li>
                    @if (ViewBag.CurrentDirectory != null)
                    {
                        <li class="breadcrumb-item active">
                            <i class="bi bi-folder me-1"></i>@ViewBag.CurrentDirectory.Name
                        </li>
                    }
                </ol>
            </nav>
        </div>
    </div>

    @if (!Model.Directories.Any() && !Model.Files.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-folder2-open text-muted" style="font-size: 5rem;"></i>
            <h3 class="mt-3 text-muted">此文件夹为空</h3>
            <p class="text-muted">上传文件或创建文件夹以开始使用</p>
            <div class="mt-4">
                <a asp-action="Upload" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-primary me-2">
                    <i class="bi bi-upload me-2"></i>上传文件
                </a>
                <a asp-action="CreateDirectory" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-success">
                    <i class="bi bi-folder-plus me-2"></i>新建文件夹
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-white">
                <div class="d-flex justify-content-between align-items-center">
                    <ul class="nav nav-tabs card-header-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="grid-tab" data-bs-toggle="tab" href="#grid" role="tab" aria-controls="grid" aria-selected="true">
                                <i class="bi bi-grid me-1"></i>网格视图
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="list-tab" data-bs-toggle="tab" href="#list" role="tab" aria-controls="list" aria-selected="false">
                                <i class="bi bi-list me-1"></i>列表视图
                            </a>
                        </li>
                    </ul>
                    <div class="d-flex">
                        <form asp-action="Search" method="get" class="me-2">
                            <input type="hidden" name="directoryId" value="@Model.CurrentDirectoryId" />
                            <div class="search-box">
                                <i class="bi bi-search search-icon"></i>
                                <input type="text" name="query" class="form-control" placeholder="搜索文件..." aria-label="搜索文件" id="searchInput">
                            </div>
                        </form>

                        <div class="dropdown me-2">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-sort-alpha-down me-1"></i>排序
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="sortDropdown">
                                <li><a class="dropdown-item sort-option" data-sort="name" data-order="asc" href="#"><i class="bi bi-sort-alpha-down me-2"></i>名称 (A-Z)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="name" data-order="desc" href="#"><i class="bi bi-sort-alpha-up me-2"></i>名称 (Z-A)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="date" data-order="desc" href="#"><i class="bi bi-calendar-date me-2"></i>最新优先</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="date" data-order="asc" href="#"><i class="bi bi-calendar-date me-2"></i>最旧优先</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="size" data-order="desc" href="#"><i class="bi bi-arrow-down-up me-2"></i>大小 (大-小)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="size" data-order="asc" href="#"><i class="bi bi-arrow-up-down me-2"></i>大小 (小-大)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="type" data-order="asc" href="#"><i class="bi bi-filter me-2"></i>类型</a></li>
                            </ul>
                        </div>

                        <div class="dropdown me-2">
                            <button class="btn btn-outline-info dropdown-toggle" type="button" id="aiDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-robot me-1"></i>AI功能
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="aiDropdown">
                                <li><a class="dropdown-item" asp-action="AiDashboard"><i class="bi bi-graph-up me-2"></i>AI仪表板</a></li>
                                <li><a class="dropdown-item" href="#" id="batchAiAnalyzeBtn"><i class="bi bi-robot me-2"></i>批量AI分析</a></li>
                                <li><a class="dropdown-item" href="#" id="refreshAiStatusBtn"><i class="bi bi-arrow-clockwise me-2"></i>刷新AI状态</a></li>
                            </ul>
                        </div>

                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="batchDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-list-check me-1"></i>批量操作
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="batchDropdown">
                                <li><a class="dropdown-item" href="#" id="selectAllBtn"><i class="bi bi-check-all me-2"></i>全选</a></li>
                                <li><a class="dropdown-item" href="#" id="deselectAllBtn"><i class="bi bi-square me-2"></i>取消全选</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="#" id="batchDownloadBtn"><i class="bi bi-download me-2"></i>批量下载</a></li>
                                <li><a class="dropdown-item" href="#" id="batchDeleteBtn"><i class="bi bi-trash me-2"></i>批量删除</a></li>
                                <li><a class="dropdown-item" href="#" id="batchMoveBtn"><i class="bi bi-folder-symlink me-2"></i>批量移动</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="grid" role="tabpanel" aria-labelledby="grid-tab">
                        <div class="row g-4" id="grid-container">
                            @foreach (var directory in Model.Directories)
                            {
                                <div class="col-md-3 col-sm-6 directory-item" data-name="@directory.Name" data-date="@directory.CreatedDate.Ticks" data-size="0" data-type="folder" data-id="@directory.Id">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="card-body text-center position-relative">
                                            <div class="form-check position-absolute top-0 start-0 m-2 item-checkbox-container">
                                                <input class="form-check-input directory-checkbox" type="checkbox" value="@directory.Id" data-type="directory">
                                            </div>
                                            <a asp-action="Index" asp-route-directoryId="@directory.Id" class="text-decoration-none">
                                                <div class="mb-3">
                                                    <i class="bi bi-folder-fill fs-1 text-warning"></i>
                                                </div>
                                                <h5 class="card-title text-truncate">@directory.Name</h5>
                                            </a>
                                            <p class="card-text small text-muted">
                                                创建于 @directory.CreatedDate.ToString("yyyy-MM-dd HH:mm")
                                            </p>
                                        </div>
                                        <div class="card-footer bg-transparent border-0">
                                            <div class="btn-group w-100" role="group">
                                                <a asp-action="RenameDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="重命名">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <form asp-action="DeleteDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件夹及其所有内容吗？" class="d-inline">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            @foreach (var file in Model.Files)
                            {
                                <div class="col-md-3 col-sm-6 file-item" data-name="@file.FileName" data-date="@file.UploadDate.Ticks" data-size="@file.FileSize" data-type="@file.ContentType" data-id="@file.Id">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="card-body text-center position-relative">
                                            <div class="form-check position-absolute top-0 start-0 m-2 item-checkbox-container">
                                                <input class="form-check-input file-checkbox" type="checkbox" value="@file.Id" data-type="file">
                                            </div>
                                            <div class="mb-3">
                                                @if (file.ContentType.StartsWith("image/"))
                                                {
                                                    <img src="/@file.FilePath" class="img-thumbnail mb-2" style="max-height: 100px; max-width: 100%;" alt="@file.FileName" />
                                                }
                                                else if (file.ContentType.Contains("pdf"))
                                                {
                                                    <i class="bi bi-file-earmark-pdf-fill fs-1 text-danger"></i>
                                                }
                                                else if (file.ContentType.Contains("word") || file.ContentType.Contains("document"))
                                                {
                                                    <i class="bi bi-file-earmark-word-fill fs-1 text-primary"></i>
                                                }
                                                else if (file.ContentType.Contains("excel") || file.ContentType.Contains("sheet"))
                                                {
                                                    <i class="bi bi-file-earmark-excel-fill fs-1 text-success"></i>
                                                }
                                                else if (file.ContentType.Contains("powerpoint") || file.ContentType.Contains("presentation"))
                                                {
                                                    <i class="bi bi-file-earmark-ppt-fill fs-1 text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-file-earmark-fill fs-1 text-primary"></i>
                                                }
                                            </div>
                                            <h5 class="card-title text-truncate">
                                                <a asp-action="Detail" asp-route-id="@file.Id" class="text-decoration-none text-dark">
                                                    @file.FileName
                                                </a>
                                            </h5>
                                            <p class="card-text small text-muted">
                                                @(file.FileSize < 1024 * 1024 ? $"{file.FileSize / 1024:F1} KB" : $"{file.FileSize / (1024 * 1024):F1} MB")
                                                <br />
                                                上传于 @file.UploadDate.ToString("yyyy-MM-dd HH:mm")
                                                @if (!string.IsNullOrEmpty(file.Description))
                                                {
                                                    <br />
                                                    <span class="text-info" data-bs-toggle="tooltip" title="@file.Description">
                                                        <i class="bi bi-info-circle me-1"></i>有描述
                                                    </span>
                                                }
                                            </p>
                                            @* AI分析结果显示 *@
                                            @if (!string.IsNullOrEmpty(file.AiCategory))
                                            {
                                                <div class="ai-analysis-info mt-2">
                                                    <div class="mb-1">
                                                        <span class="badge bg-primary">
                                                            <i class="bi bi-robot me-1"></i>@file.AiCategory
                                                        </span>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(file.AiSummary))
                                                    {
                                                        <p class="small text-muted mb-1" data-bs-toggle="tooltip" title="@file.AiSummary">
                                                            <i class="bi bi-file-text me-1"></i>@(file.AiSummary.Length > 50 ? file.AiSummary.Substring(0, 50) + "..." : file.AiSummary)
                                                        </p>
                                                    }
                                                    @if (!string.IsNullOrEmpty(file.AiTags))
                                                    {
                                                        <div class="ai-tags">
                                                            @foreach (var tag in file.AiTags.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(2))
                                                            {
                                                                <span class="badge bg-secondary me-1">@tag.Trim()</span>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="ai-analysis-placeholder mt-2" data-file-id="@file.Id">
                                                    <small class="text-muted">
                                                        <i class="bi bi-clock me-1"></i>
                                                        <span class="ai-status-text">AI分析中...</span>
                                                    </small>
                                                </div>
                                            }
                                        </div>
                                        <div class="card-footer bg-transparent border-0">
                                            <div class="btn-group w-100" role="group">
                                                <a asp-action="Detail" asp-route-id="@file.Id" class="btn btn-sm btn-outline-secondary" data-bs-toggle="tooltip" title="查看详情">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a asp-action="Download" asp-route-id="@file.Id" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="下载">
                                                    <i class="bi bi-download"></i>
                                                </a>
                                                <a asp-controller="Share" asp-action="Create" asp-route-fileId="@file.Id" class="btn btn-sm btn-outline-success" data-bs-toggle="tooltip" title="分享">
                                                    <i class="bi bi-share"></i>
                                                </a>
                                                <button type="button" class="btn btn-sm btn-outline-warning ai-reanalyze-btn" data-file-id="@file.Id" data-bs-toggle="tooltip" title="AI重新分析">
                                                    <i class="bi bi-robot"></i>
                                                </button>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                        <i class="bi bi-three-dots"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a class="dropdown-item" asp-action="RenameFile" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId"><i class="bi bi-pencil me-2"></i>重命名</a></li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li>
                                                            <form asp-action="Delete" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件吗？" class="d-inline">
                                                                <button type="submit" class="dropdown-item text-danger"><i class="bi bi-trash me-2"></i>删除</button>
                                                            </form>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="tab-pane fade" id="list" role="tabpanel" aria-labelledby="list-tab">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th width="40px">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="selectAllCheckbox">
                                            </div>
                                        </th>
                                        <th>名称</th>
                                        <th>类型</th>
                                        <th>大小</th>
                                        <th>日期</th>
                                        <th>AI分析</th>
                                        <th>描述</th>
                                        <th>操作</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var directory in Model.Directories)
                                    {
                                        <tr class="directory-item" data-name="@directory.Name" data-date="@directory.CreatedDate.Ticks" data-size="0" data-type="folder" data-id="@directory.Id">
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input directory-checkbox" type="checkbox" value="@directory.Id" data-type="directory">
                                                </div>
                                            </td>
                                            <td>
                                                <a asp-action="Index" asp-route-directoryId="@directory.Id" class="text-decoration-none">
                                                    <i class="bi bi-folder-fill text-warning me-2"></i>@directory.Name
                                                </a>
                                            </td>
                                            <td>文件夹</td>
                                            <td>-</td>
                                            <td>@directory.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>-</td>
                                            <td>-</td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="RenameDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="重命名">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <form asp-action="DeleteDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件夹及其所有内容吗？" class="d-inline">
                                                        <button type="submit" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                    @foreach (var file in Model.Files)
                                    {
                                        <tr class="file-item" data-name="@file.FileName" data-date="@file.UploadDate.Ticks" data-size="@file.FileSize" data-type="@file.ContentType" data-id="@file.Id">
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input file-checkbox" type="checkbox" value="@file.Id" data-type="file">
                                                </div>
                                            </td>
                                            <td>
                                                <i class="bi bi-file-earmark me-2"></i>
                                                <a asp-action="Detail" asp-route-id="@file.Id" class="text-decoration-none">
                                                    @file.FileName
                                                </a>
                                            </td>
                                            <td>@file.ContentType</td>
                                            <td>@(file.FileSize < 1024 * 1024 ? $"{file.FileSize / 1024:F1} KB" : $"{file.FileSize / (1024 * 1024):F1} MB")</td>
                                            <td>@file.UploadDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(file.AiCategory))
                                                {
                                                    <div>
                                                        <span class="badge bg-primary mb-1">@file.AiCategory</span>
                                                        @if (!string.IsNullOrEmpty(file.AiTags))
                                                        {
                                                            <br />
                                                            @foreach (var tag in file.AiTags.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(2))
                                                            {
                                                                <span class="badge bg-secondary me-1">@tag.Trim()</span>
                                                            }
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <small class="text-muted ai-analysis-placeholder" data-file-id="@file.Id">
                                                        <i class="bi bi-clock me-1"></i>
                                                        <span class="ai-status-text">分析中...</span>
                                                    </small>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(file.Description))
                                                {
                                                    <span data-bs-toggle="tooltip" title="@file.Description">
                                                        <i class="bi bi-info-circle text-info me-1"></i>@(file.Description.Length > 20 ? file.Description.Substring(0, 20) + "..." : file.Description)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Detail" asp-route-id="@file.Id" class="btn btn-outline-secondary" data-bs-toggle="tooltip" title="查看详情">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a asp-action="Download" asp-route-id="@file.Id" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="下载">
                                                        <i class="bi bi-download"></i>
                                                    </a>
                                                    <a asp-controller="Share" asp-action="Create" asp-route-fileId="@file.Id" class="btn btn-outline-success" data-bs-toggle="tooltip" title="分享">
                                                        <i class="bi bi-share"></i>
                                                    </a>
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                            <i class="bi bi-three-dots"></i>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li><a class="dropdown-item" asp-action="RenameFile" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId"><i class="bi bi-pencil me-2"></i>重命名</a></li>
                                                            <li><a class="dropdown-item ai-reanalyze-btn" href="#" data-file-id="@file.Id"><i class="bi bi-robot me-2"></i>AI重新分析</a></li>
                                                            <li><hr class="dropdown-divider"></li>
                                                            <li>
                                                                <form asp-action="Delete" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件吗？" class="d-inline">
                                                                    <button type="submit" class="dropdown-item text-danger"><i class="bi bi-trash me-2"></i>删除</button>
                                                                </form>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // 搜索功能
        document.getElementById('searchInput')?.addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const items = document.querySelectorAll('.directory-item, .file-item');

            items.forEach(item => {
                const name = item.getAttribute('data-name').toLowerCase();
                if (name.includes(searchText)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // 排序功能
        document.querySelectorAll('.sort-option').forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();

                const sortBy = this.getAttribute('data-sort');
                const sortOrder = this.getAttribute('data-order');

                sortItems(sortBy, sortOrder);
            });
        });

        function sortItems(sortBy, sortOrder) {
            const container = document.getElementById('grid-container');
            const items = Array.from(container.children);

            items.sort((a, b) => {
                let aValue = a.getAttribute(`data-${sortBy}`);
                let bValue = b.getAttribute(`data-${sortBy}`);

                // 特殊处理文件夹，始终排在前面
                if (sortBy !== 'type') {
                    if (a.getAttribute('data-type') === 'folder' && b.getAttribute('data-type') !== 'folder') {
                        return -1;
                    }
                    if (a.getAttribute('data-type') !== 'folder' && b.getAttribute('data-type') === 'folder') {
                        return 1;
                    }
                }

                // 根据数据类型进行比较
                if (sortBy === 'size' || sortBy === 'date') {
                    aValue = parseInt(aValue);
                    bValue = parseInt(bValue);
                }

                // 根据排序方向进行比较
                if (sortOrder === 'asc') {
                    return aValue > bValue ? 1 : -1;
                } else {
                    return aValue < bValue ? 1 : -1;
                }
            });

            // 重新排列DOM元素
            items.forEach(item => {
                container.appendChild(item);
            });

            // 同样排序列表视图
            const tableBody = document.querySelector('#list tbody');
            if (tableBody) {
                const rows = Array.from(tableBody.children);

                rows.sort((a, b) => {
                    let aValue = a.getAttribute(`data-${sortBy}`);
                    let bValue = b.getAttribute(`data-${sortBy}`);

                    // 特殊处理文件夹，始终排在前面
                    if (sortBy !== 'type') {
                        if (a.getAttribute('data-type') === 'folder' && b.getAttribute('data-type') !== 'folder') {
                            return -1;
                        }
                        if (a.getAttribute('data-type') !== 'folder' && b.getAttribute('data-type') === 'folder') {
                            return 1;
                        }
                    }

                    // 根据数据类型进行比较
                    if (sortBy === 'size' || sortBy === 'date') {
                        aValue = parseInt(aValue);
                        bValue = parseInt(bValue);
                    }

                    // 根据排序方向进行比较
                    if (sortOrder === 'asc') {
                        return aValue > bValue ? 1 : -1;
                    } else {
                        return aValue < bValue ? 1 : -1;
                    }
                });

                // 重新排列DOM元素
                rows.forEach(row => {
                    tableBody.appendChild(row);
                });
            }
        }

        // 确认删除
        document.addEventListener('submit', function(e) {
            const form = e.target;
            if (form.hasAttribute('data-confirm')) {
                if (!confirm(form.getAttribute('data-confirm'))) {
                    e.preventDefault();
                }
            }
        });

        // 初始化工具提示
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // 批量操作功能
        // 默认将批量模式设置为激活状态
        let batchModeActive = true;

        // 全选
        document.getElementById('selectAllBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = true;
            });

            if (document.getElementById('selectAllCheckbox')) {
                document.getElementById('selectAllCheckbox').checked = true;
            }

            updateBatchActionButtons();
        });

        // 取消全选
        document.getElementById('deselectAllBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = false;
            });

            if (document.getElementById('selectAllCheckbox')) {
                document.getElementById('selectAllCheckbox').checked = false;
            }

            updateBatchActionButtons();
        });

        // 全选复选框
        document.getElementById('selectAllCheckbox')?.addEventListener('change', function() {
            const isChecked = this.checked;

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = isChecked;
            });

            updateBatchActionButtons();
        });

        // 更新批量操作按钮状态
        function updateBatchActionButtons() {
            const hasSelection = document.querySelectorAll('.file-checkbox:checked, .directory-checkbox:checked').length > 0;

            document.getElementById('batchDeleteBtn').disabled = !hasSelection;
            document.getElementById('batchMoveBtn').disabled = !hasSelection;
            document.getElementById('batchDownloadBtn').disabled = !hasSelection;
        }

        // 初始化按钮状态
        updateBatchActionButtons();

        // 批量删除
        document.getElementById('batchDeleteBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);
            const selectedDirectories = Array.from(document.querySelectorAll('.directory-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0 && selectedDirectories.length === 0) {
                alert('请选择要删除的文件或文件夹');
                return;
            }

            if (!confirm(`确定要删除选中的 ${selectedFiles.length} 个文件和 ${selectedDirectories.length} 个文件夹吗？`)) {
                return;
            }

            // 创建表单并提交
            const form = document.createElement('form');
            form.method = 'post';
            form.action = '@Url.Action("BatchOperation")';

            // 添加防伪令牌
            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
            if (antiForgeryToken) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = antiForgeryToken.value;
                form.appendChild(tokenInput);
            }

            // 添加操作类型
            const operationInput = document.createElement('input');
            operationInput.type = 'hidden';
            operationInput.name = 'Operation';
            operationInput.value = 'delete';
            form.appendChild(operationInput);

            // 添加当前目录ID
            const currentDirInput = document.createElement('input');
            currentDirInput.type = 'hidden';
            currentDirInput.name = 'CurrentDirectoryId';
            currentDirInput.value = '@Model.CurrentDirectoryId';
            form.appendChild(currentDirInput);

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'FileIds';
                input.value = fileId;
                form.appendChild(input);
            });

            // 添加选中的目录ID
            selectedDirectories.forEach(dirId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'DirectoryIds';
                input.value = dirId;
                form.appendChild(input);
            });

            document.body.appendChild(form);
            form.submit();
        });

        // 批量下载
        document.getElementById('batchDownloadBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            // 只能下载文件，不能下载文件夹
            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0) {
                alert('请选择要下载的文件');
                return;
            }

            if (!batchModeActive) {
                toggleBatchMode();
            }

            // 创建表单并提交
            const form = document.createElement('form');
            form.method = 'post';
            form.action = '@Url.Action("BatchOperation")';

            // 添加防伪令牌
            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
            if (antiForgeryToken) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = antiForgeryToken.value;
                form.appendChild(tokenInput);
            }

            // 添加操作类型
            const operationInput = document.createElement('input');
            operationInput.type = 'hidden';
            operationInput.name = 'Operation';
            operationInput.value = 'download';
            form.appendChild(operationInput);

            // 添加当前目录ID
            const currentDirInput = document.createElement('input');
            currentDirInput.type = 'hidden';
            currentDirInput.name = 'CurrentDirectoryId';
            currentDirInput.value = '@Model.CurrentDirectoryId';
            form.appendChild(currentDirInput);

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'FileIds';
                input.value = fileId;
                form.appendChild(input);
            });

            document.body.appendChild(form);
            form.submit();
        });

        // 批量移动
        document.getElementById('batchMoveBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);
            const selectedDirectories = Array.from(document.querySelectorAll('.directory-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0 && selectedDirectories.length === 0) {
                alert('请选择要移动的文件或文件夹');
                return;
            }

            // 构建URL
            let url = '@Url.Action("SelectDestination")';
            url += '?currentDirectoryId=@Model.CurrentDirectoryId';

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                url += `&fileIds=${fileId}`;
            });

            // 添加选中的目录ID
            selectedDirectories.forEach(dirId => {
                url += `&directoryIds=${dirId}`;
            });

            window.location.href = url;
        });

        // 监听复选框变化
        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('file-checkbox') || e.target.classList.contains('directory-checkbox')) {
                updateBatchActionButtons();
            }
        });

        // 批量AI分析按钮
        document.getElementById('batchAiAnalyzeBtn')?.addEventListener('click', function(e) {
            e.preventDefault();
            
            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => parseInt(cb.value));
            
            if (selectedFiles.length === 0) {
                showToast('请选择要进行AI分析的文件', 'warning');
                return;
            }
            
            const btn = this;
            const originalContent = btn.innerHTML;
            
            btn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>批量分析中...';
            btn.disabled = true;

            fetch('/api/ai/batch-analyze', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify(selectedFiles)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(`批量AI分析完成！成功: ${data.successCount}，失败: ${data.failCount}`, 'success');
                    // 等待几秒后刷新AI状态
                    setTimeout(() => {
                        refreshAiStatus();
                        // 取消选中状态
                        document.querySelectorAll('.file-checkbox:checked').forEach(cb => cb.checked = false);
                        updateBatchActionButtons();
                    }, 3000);
                } else {
                    showToast('批量AI分析失败: ' + (data.message || '未知错误'), 'error');
                }
            })
            .catch(error => {
                console.error('批量AI分析失败:', error);
                showToast('批量AI分析失败，请稍后重试', 'error');
            })
            .finally(() => {
                btn.innerHTML = originalContent;
                btn.disabled = false;
            });
        });

        // 刷新AI状态按钮
        document.getElementById('refreshAiStatusBtn')?.addEventListener('click', function(e) {
            e.preventDefault();
            
            const btn = this;
            const originalContent = btn.innerHTML;
            
            btn.innerHTML = '<i class="bi bi-arrow-clockwise spin me-2"></i>刷新中...';
            btn.disabled = true;
            
            refreshAiStatus();
            
            setTimeout(() => {
                btn.innerHTML = originalContent;
                btn.disabled = false;
                showToast('AI状态已刷新', 'success');
            }, 2000);
        });

        // 刷新所有文件的AI状态
        function refreshAiStatus() {
            const fileItems = document.querySelectorAll('.file-item[data-id]');
            fileItems.forEach(item => {
                const fileId = item.getAttribute('data-id');
                if (fileId) {
                    refreshFileAiStatus(fileId);
                }
            });
        }

        // 刷新单个文件的AI状态
        function refreshFileAiStatus(fileId) {
            fetch(`/api/ai/status/${fileId}`)
                .then(response => response.json())
                .then(data => {
                    updateFileAiDisplay(fileId, data);
                })
                .catch(error => {
                    console.error('获取AI状态失败:', error);
                });
        }

        // 更新文件的AI显示
        function updateFileAiDisplay(fileId, aiData) {
            const fileItems = document.querySelectorAll(`[data-id="${fileId}"]`);
            
            fileItems.forEach(fileItem => {
                if (aiData.hasAnalysis) {
                    // 更新网格视图中的AI信息
                    const gridAiPlaceholder = fileItem.querySelector('.ai-analysis-placeholder');
                    if (gridAiPlaceholder) {
                        const newAiInfo = document.createElement('div');
                        newAiInfo.className = 'ai-analysis-info mt-2';
                        newAiInfo.innerHTML = `
                            <div class="mb-1">
                                <span class="badge bg-primary">
                                    <i class="bi bi-robot me-1"></i>${aiData.aiCategory || 'N/A'}
                                </span>
                            </div>
                            ${aiData.aiSummary ? `
                                <p class="small text-muted mb-1" data-bs-toggle="tooltip" title="${aiData.aiSummary}">
                                    <i class="bi bi-file-text me-1"></i>${aiData.aiSummary.length > 50 ? aiData.aiSummary.substring(0, 50) + '...' : aiData.aiSummary}
                                </p>
                            ` : ''}
                            ${aiData.aiTags ? `
                                <div class="ai-tags">
                                    ${aiData.aiTags.split(',').slice(0, 2).map(tag => `<span class="badge bg-secondary me-1">${tag.trim()}</span>`).join('')}
                                </div>
                            ` : ''}
                        `;
                        gridAiPlaceholder.replaceWith(newAiInfo);
                    }

                    // 更新表格视图中的AI信息
                    const tableRow = document.querySelector(`tr[data-id="${fileId}"]`);
                    if (tableRow) {
                        const tableAiPlaceholder = tableRow.querySelector('.ai-analysis-placeholder');
                        if (tableAiPlaceholder) {
                            const newAiInfo = document.createElement('div');
                            newAiInfo.innerHTML = `
                                <span class="badge bg-primary mb-1">${aiData.aiCategory || 'N/A'}</span>
                                ${aiData.aiTags ? `
                                    <br />
                                    ${aiData.aiTags.split(',').slice(0, 2).map(tag => `<span class="badge bg-secondary me-1">${tag.trim()}</span>`).join('')}
                                ` : ''}
                            `;
                            tableAiPlaceholder.replaceWith(newAiInfo);
                        }
                    }
                } else {
                    // 更新分析状态文本
                    const statusTexts = fileItem.querySelectorAll('.ai-status-text');
                    statusTexts.forEach(text => {
                        text.textContent = '等待分析...';
                    });
                }
            });
        }

        // 页面加载完成后定期检查AI分析状态
        document.addEventListener('DOMContentLoaded', function() {
            // 初次加载后5秒检查一次
            setTimeout(() => {
                refreshAiStatus();
            }, 5000);
            
            // 之后每30秒检查一次（仅针对未分析的文件）
            setInterval(() => {
                const pendingFiles = document.querySelectorAll('.ai-analysis-placeholder[data-file-id]');
                if (pendingFiles.length > 0) {
                    refreshAiStatus();
                }
            }, 30000);
        });

        // AI重新分析功能
        document.addEventListener('click', function(e) {
            if (e.target.closest('.ai-reanalyze-btn')) {
                e.preventDefault();
                const button = e.target.closest('.ai-reanalyze-btn');
                const fileId = button.getAttribute('data-file-id');
                
                if (!fileId) return;
                
                // 显示加载状态
                const originalIcon = button.innerHTML;
                button.innerHTML = '<i class="bi bi-arrow-clockwise spin"></i>';
                button.disabled = true;
                
                // 发送AI重新分析请求
                fetch(`/api/ai/reanalyze/${fileId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    button.innerHTML = originalIcon;
                    button.disabled = false;
                    
                    if (data.success) {
                        // 显示成功消息
                        showToast('AI分析已完成！', 'success');
                        // 刷新页面以显示新的分析结果
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showToast(data.message || 'AI分析失败，请稍后重试', 'error');
                    }
                })
                .catch(error => {
                    console.error('AI分析请求失败:', error);
                    button.innerHTML = originalIcon;
                    button.disabled = false;
                    showToast('AI分析请求失败，请稍后重试', 'error');
                });
            }
        });

        // 显示提示消息的函数
        function showToast(message, type = 'info') {
            // 创建toast元素
            const toast = document.createElement('div');
            const alertClass = type === 'error' ? 'danger' : type === 'success' ? 'success' : type === 'warning' ? 'warning' : 'info';
            const iconClass = type === 'error' ? 'exclamation-triangle' : type === 'success' ? 'check-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle';
            
            toast.className = `alert alert-${alertClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 1050; min-width: 300px;';
            toast.innerHTML = `
                <i class="bi bi-${iconClass} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            document.body.appendChild(toast);
            
            // 自动移除toast
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 5000);
        }
    </script>

    <style>
        .ai-analysis-info .badge {
            font-size: 0.7em;
        }
        
        .ai-tags .badge {
            font-size: 0.6em;
        }
        
        .spin {
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        .ai-analysis-placeholder {
            opacity: 0.7;
        }
    </style>
}
