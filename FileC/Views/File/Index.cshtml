@model FileExplorerViewModel
@{
    ViewData["Title"] = "我的文件";
}

<div class="container fade-in">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="bi bi-folder2-open me-2"></i>文件管理器</h1>
        <div class="btn-group">
            <a asp-action="Upload" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-primary">
                <i class="bi bi-upload me-2"></i>上传文件
            </a>
            <a asp-action="CreateDirectory" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-success">
                <i class="bi bi-folder-plus me-2"></i>新建文件夹
            </a>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-route-directoryId="" class="text-decoration-none">
                            <i class="bi bi-house-door me-1"></i>根目录
                        </a>
                    </li>
                    @if (ViewBag.CurrentDirectory != null)
                    {
                        <li class="breadcrumb-item active">
                            <i class="bi bi-folder me-1"></i>@ViewBag.CurrentDirectory.Name
                        </li>
                    }
                </ol>
            </nav>
        </div>
    </div>

    @if (!Model.Directories.Any() && !Model.Files.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-folder2-open text-muted" style="font-size: 5rem;"></i>
            <h3 class="mt-3 text-muted">此文件夹为空</h3>
            <p class="text-muted">上传文件或创建文件夹以开始使用</p>
            <div class="mt-4">
                <a asp-action="Upload" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-primary me-2">
                    <i class="bi bi-upload me-2"></i>上传文件
                </a>
                <a asp-action="CreateDirectory" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-success">
                    <i class="bi bi-folder-plus me-2"></i>新建文件夹
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-white">
                <div class="d-flex justify-content-between align-items-center">
                    <ul class="nav nav-tabs card-header-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="grid-tab" data-bs-toggle="tab" href="#grid" role="tab" aria-controls="grid" aria-selected="true">
                                <i class="bi bi-grid me-1"></i>网格视图
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="list-tab" data-bs-toggle="tab" href="#list" role="tab" aria-controls="list" aria-selected="false">
                                <i class="bi bi-list me-1"></i>列表视图
                            </a>
                        </li>
                    </ul>
                    <div class="d-flex">
                        <form asp-action="Search" method="get" class="me-2">
                            <input type="hidden" name="directoryId" value="@Model.CurrentDirectoryId" />
                            <div class="search-box">
                                <i class="bi bi-search search-icon"></i>
                                <input type="text" name="query" class="form-control" placeholder="搜索文件..." aria-label="搜索文件" id="searchInput">
                            </div>
                        </form>

                        <div class="dropdown me-2">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-sort-alpha-down me-1"></i>排序
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="sortDropdown">
                                <li><a class="dropdown-item sort-option" data-sort="name" data-order="asc" href="#"><i class="bi bi-sort-alpha-down me-2"></i>名称 (A-Z)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="name" data-order="desc" href="#"><i class="bi bi-sort-alpha-up me-2"></i>名称 (Z-A)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="date" data-order="desc" href="#"><i class="bi bi-calendar-date me-2"></i>最新优先</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="date" data-order="asc" href="#"><i class="bi bi-calendar-date me-2"></i>最旧优先</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="size" data-order="desc" href="#"><i class="bi bi-arrow-down-up me-2"></i>大小 (大-小)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="size" data-order="asc" href="#"><i class="bi bi-arrow-up-down me-2"></i>大小 (小-大)</a></li>
                                <li><a class="dropdown-item sort-option" data-sort="type" data-order="asc" href="#"><i class="bi bi-filter me-2"></i>类型</a></li>
                            </ul>
                        </div>

                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="batchDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-list-check me-1"></i>批量操作
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="batchDropdown">
                                <li><a class="dropdown-item" href="#" id="selectAllBtn"><i class="bi bi-check-all me-2"></i>全选</a></li>
                                <li><a class="dropdown-item" href="#" id="deselectAllBtn"><i class="bi bi-square me-2"></i>取消全选</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="#" id="batchDownloadBtn"><i class="bi bi-download me-2"></i>批量下载</a></li>
                                <li><a class="dropdown-item" href="#" id="batchDeleteBtn"><i class="bi bi-trash me-2"></i>批量删除</a></li>
                                <li><a class="dropdown-item" href="#" id="batchMoveBtn"><i class="bi bi-folder-symlink me-2"></i>批量移动</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="grid" role="tabpanel" aria-labelledby="grid-tab">
                        <div class="row g-4" id="grid-container">
                            @foreach (var directory in Model.Directories)
                            {
                                <div class="col-md-3 col-sm-6 directory-item" data-name="@directory.Name" data-date="@directory.CreatedDate.Ticks" data-size="0" data-type="folder" data-id="@directory.Id">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="card-body text-center position-relative">
                                            <div class="form-check position-absolute top-0 start-0 m-2 item-checkbox-container">
                                                <input class="form-check-input directory-checkbox" type="checkbox" value="@directory.Id" data-type="directory">
                                            </div>
                                            <a asp-action="Index" asp-route-directoryId="@directory.Id" class="text-decoration-none">
                                                <div class="mb-3">
                                                    <i class="bi bi-folder-fill fs-1 text-warning"></i>
                                                </div>
                                                <h5 class="card-title text-truncate">@directory.Name</h5>
                                            </a>
                                            <p class="card-text small text-muted">
                                                创建于 @directory.CreatedDate.ToString("yyyy-MM-dd HH:mm")
                                            </p>
                                        </div>
                                        <div class="card-footer bg-transparent border-0">
                                            <div class="btn-group w-100" role="group">
                                                <a asp-action="RenameDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="重命名">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <form asp-action="DeleteDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件夹及其所有内容吗？" class="d-inline">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            @foreach (var file in Model.Files)
                            {
                                <div class="col-md-3 col-sm-6 file-item" data-name="@file.FileName" data-date="@file.UploadDate.Ticks" data-size="@file.FileSize" data-type="@file.ContentType" data-id="@file.Id">
                                    <div class="card h-100 border-0 shadow-sm">
                                        <div class="card-body text-center position-relative">
                                            <div class="form-check position-absolute top-0 start-0 m-2 item-checkbox-container">
                                                <input class="form-check-input file-checkbox" type="checkbox" value="@file.Id" data-type="file">
                                            </div>
                                            <div class="mb-3">
                                                @if (file.ContentType.StartsWith("image/"))
                                                {
                                                    <img src="/@file.FilePath" class="img-thumbnail mb-2" style="max-height: 100px; max-width: 100%;" alt="@file.FileName" />
                                                }
                                                else if (file.ContentType.Contains("pdf"))
                                                {
                                                    <i class="bi bi-file-earmark-pdf-fill fs-1 text-danger"></i>
                                                }
                                                else if (file.ContentType.Contains("word") || file.ContentType.Contains("document"))
                                                {
                                                    <i class="bi bi-file-earmark-word-fill fs-1 text-primary"></i>
                                                }
                                                else if (file.ContentType.Contains("excel") || file.ContentType.Contains("sheet"))
                                                {
                                                    <i class="bi bi-file-earmark-excel-fill fs-1 text-success"></i>
                                                }
                                                else if (file.ContentType.Contains("powerpoint") || file.ContentType.Contains("presentation"))
                                                {
                                                    <i class="bi bi-file-earmark-ppt-fill fs-1 text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-file-earmark-fill fs-1 text-primary"></i>
                                                }
                                            </div>
                                            <h5 class="card-title text-truncate">@file.FileName</h5>
                                            <p class="card-text small text-muted">
                                                @(file.FileSize < 1024 * 1024 ? $"{file.FileSize / 1024:F1} KB" : $"{file.FileSize / (1024 * 1024):F1} MB")
                                                <br />
                                                上传于 @file.UploadDate.ToString("yyyy-MM-dd HH:mm")
                                                @if (!string.IsNullOrEmpty(file.Description))
                                                {
                                                    <br />
                                                    <span class="text-info" data-bs-toggle="tooltip" title="@file.Description">
                                                        <i class="bi bi-info-circle me-1"></i>有描述
                                                    </span>
                                                }
                                            </p>
                                        </div>
                                        <div class="card-footer bg-transparent border-0">
                                            <div class="btn-group w-100" role="group">
                                                <a asp-action="Download" asp-route-id="@file.Id" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="下载">
                                                    <i class="bi bi-download"></i>
                                                </a>
                                                <a asp-controller="Share" asp-action="Create" asp-route-fileId="@file.Id" class="btn btn-sm btn-outline-success" data-bs-toggle="tooltip" title="分享">
                                                    <i class="bi bi-share"></i>
                                                </a>
                                                <a asp-action="RenameFile" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" title="重命名">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <form asp-action="Delete" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件吗？" class="d-inline">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="tab-pane fade" id="list" role="tabpanel" aria-labelledby="list-tab">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th width="40px">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="selectAllCheckbox">
                                            </div>
                                        </th>
                                        <th>名称</th>
                                        <th>类型</th>
                                        <th>大小</th>
                                        <th>日期</th>
                                        <th>描述</th>
                                        <th>操作</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var directory in Model.Directories)
                                    {
                                        <tr class="directory-item" data-name="@directory.Name" data-date="@directory.CreatedDate.Ticks" data-size="0" data-type="folder" data-id="@directory.Id">
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input directory-checkbox" type="checkbox" value="@directory.Id" data-type="directory">
                                                </div>
                                            </td>
                                            <td>
                                                <a asp-action="Index" asp-route-directoryId="@directory.Id" class="text-decoration-none">
                                                    <i class="bi bi-folder-fill text-warning me-2"></i>@directory.Name
                                                </a>
                                            </td>
                                            <td>文件夹</td>
                                            <td>-</td>
                                            <td>@directory.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>-</td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="RenameDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="重命名">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <form asp-action="DeleteDirectory" asp-route-id="@directory.Id" asp-route-parentDirectoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件夹及其所有内容吗？" class="d-inline">
                                                        <button type="submit" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                    @foreach (var file in Model.Files)
                                    {
                                        <tr class="file-item" data-name="@file.FileName" data-date="@file.UploadDate.Ticks" data-size="@file.FileSize" data-type="@file.ContentType" data-id="@file.Id">
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input file-checkbox" type="checkbox" value="@file.Id" data-type="file">
                                                </div>
                                            </td>
                                            <td>
                                                <i class="bi bi-file-earmark me-2"></i>@file.FileName
                                            </td>
                                            <td>@file.ContentType</td>
                                            <td>@(file.FileSize < 1024 * 1024 ? $"{file.FileSize / 1024:F1} KB" : $"{file.FileSize / (1024 * 1024):F1} MB")</td>
                                            <td>@file.UploadDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(file.Description))
                                                {
                                                    <span data-bs-toggle="tooltip" title="@file.Description">
                                                        <i class="bi bi-info-circle text-info me-1"></i>@(file.Description.Length > 20 ? file.Description.Substring(0, 20) + "..." : file.Description)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Download" asp-route-id="@file.Id" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="下载">
                                                        <i class="bi bi-download"></i>
                                                    </a>
                                                    <a asp-controller="Share" asp-action="Create" asp-route-fileId="@file.Id" class="btn btn-outline-success" data-bs-toggle="tooltip" title="分享">
                                                        <i class="bi bi-share"></i>
                                                    </a>
                                                    <a asp-action="RenameFile" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" class="btn btn-outline-info" data-bs-toggle="tooltip" title="重命名">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <form asp-action="Delete" asp-route-id="@file.Id" asp-route-directoryId="@Model.CurrentDirectoryId" method="post" data-confirm="确定要删除此文件吗？" class="d-inline">
                                                        <button type="submit" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="删除">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // 搜索功能
        document.getElementById('searchInput')?.addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const items = document.querySelectorAll('.directory-item, .file-item');

            items.forEach(item => {
                const name = item.getAttribute('data-name').toLowerCase();
                if (name.includes(searchText)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // 排序功能
        document.querySelectorAll('.sort-option').forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();

                const sortBy = this.getAttribute('data-sort');
                const sortOrder = this.getAttribute('data-order');

                sortItems(sortBy, sortOrder);
            });
        });

        function sortItems(sortBy, sortOrder) {
            const container = document.getElementById('grid-container');
            const items = Array.from(container.children);

            items.sort((a, b) => {
                let aValue = a.getAttribute(`data-${sortBy}`);
                let bValue = b.getAttribute(`data-${sortBy}`);

                // 特殊处理文件夹，始终排在前面
                if (sortBy !== 'type') {
                    if (a.getAttribute('data-type') === 'folder' && b.getAttribute('data-type') !== 'folder') {
                        return -1;
                    }
                    if (a.getAttribute('data-type') !== 'folder' && b.getAttribute('data-type') === 'folder') {
                        return 1;
                    }
                }

                // 根据数据类型进行比较
                if (sortBy === 'size' || sortBy === 'date') {
                    aValue = parseInt(aValue);
                    bValue = parseInt(bValue);
                }

                // 根据排序方向进行比较
                if (sortOrder === 'asc') {
                    return aValue > bValue ? 1 : -1;
                } else {
                    return aValue < bValue ? 1 : -1;
                }
            });

            // 重新排列DOM元素
            items.forEach(item => {
                container.appendChild(item);
            });

            // 同样排序列表视图
            const tableBody = document.querySelector('#list tbody');
            if (tableBody) {
                const rows = Array.from(tableBody.children);

                rows.sort((a, b) => {
                    let aValue = a.getAttribute(`data-${sortBy}`);
                    let bValue = b.getAttribute(`data-${sortBy}`);

                    // 特殊处理文件夹，始终排在前面
                    if (sortBy !== 'type') {
                        if (a.getAttribute('data-type') === 'folder' && b.getAttribute('data-type') !== 'folder') {
                            return -1;
                        }
                        if (a.getAttribute('data-type') !== 'folder' && b.getAttribute('data-type') === 'folder') {
                            return 1;
                        }
                    }

                    // 根据数据类型进行比较
                    if (sortBy === 'size' || sortBy === 'date') {
                        aValue = parseInt(aValue);
                        bValue = parseInt(bValue);
                    }

                    // 根据排序方向进行比较
                    if (sortOrder === 'asc') {
                        return aValue > bValue ? 1 : -1;
                    } else {
                        return aValue < bValue ? 1 : -1;
                    }
                });

                // 重新排列DOM元素
                rows.forEach(row => {
                    tableBody.appendChild(row);
                });
            }
        }

        // 确认删除
        document.addEventListener('submit', function(e) {
            const form = e.target;
            if (form.hasAttribute('data-confirm')) {
                if (!confirm(form.getAttribute('data-confirm'))) {
                    e.preventDefault();
                }
            }
        });

        // 初始化工具提示
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // 批量操作功能
        // 默认将批量模式设置为激活状态
        let batchModeActive = true;

        // 全选
        document.getElementById('selectAllBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = true;
            });

            if (document.getElementById('selectAllCheckbox')) {
                document.getElementById('selectAllCheckbox').checked = true;
            }

            updateBatchActionButtons();
        });

        // 取消全选
        document.getElementById('deselectAllBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = false;
            });

            if (document.getElementById('selectAllCheckbox')) {
                document.getElementById('selectAllCheckbox').checked = false;
            }

            updateBatchActionButtons();
        });

        // 全选复选框
        document.getElementById('selectAllCheckbox')?.addEventListener('change', function() {
            const isChecked = this.checked;

            document.querySelectorAll('.file-checkbox, .directory-checkbox').forEach(checkbox => {
                checkbox.checked = isChecked;
            });

            updateBatchActionButtons();
        });

        // 更新批量操作按钮状态
        function updateBatchActionButtons() {
            const hasSelection = document.querySelectorAll('.file-checkbox:checked, .directory-checkbox:checked').length > 0;

            document.getElementById('batchDeleteBtn').disabled = !hasSelection;
            document.getElementById('batchMoveBtn').disabled = !hasSelection;
            document.getElementById('batchDownloadBtn').disabled = !hasSelection;
        }

        // 初始化按钮状态
        updateBatchActionButtons();

        // 批量删除
        document.getElementById('batchDeleteBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);
            const selectedDirectories = Array.from(document.querySelectorAll('.directory-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0 && selectedDirectories.length === 0) {
                alert('请选择要删除的文件或文件夹');
                return;
            }

            if (!confirm(`确定要删除选中的 ${selectedFiles.length} 个文件和 ${selectedDirectories.length} 个文件夹吗？`)) {
                return;
            }

            // 创建表单并提交
            const form = document.createElement('form');
            form.method = 'post';
            form.action = '@Url.Action("BatchOperation")';

            // 添加防伪令牌
            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
            if (antiForgeryToken) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = antiForgeryToken.value;
                form.appendChild(tokenInput);
            }

            // 添加操作类型
            const operationInput = document.createElement('input');
            operationInput.type = 'hidden';
            operationInput.name = 'Operation';
            operationInput.value = 'delete';
            form.appendChild(operationInput);

            // 添加当前目录ID
            const currentDirInput = document.createElement('input');
            currentDirInput.type = 'hidden';
            currentDirInput.name = 'CurrentDirectoryId';
            currentDirInput.value = '@Model.CurrentDirectoryId';
            form.appendChild(currentDirInput);

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'FileIds';
                input.value = fileId;
                form.appendChild(input);
            });

            // 添加选中的目录ID
            selectedDirectories.forEach(dirId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'DirectoryIds';
                input.value = dirId;
                form.appendChild(input);
            });

            document.body.appendChild(form);
            form.submit();
        });

        // 批量下载
        document.getElementById('batchDownloadBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            // 只能下载文件，不能下载文件夹
            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0) {
                alert('请选择要下载的文件');
                return;
            }

            if (!batchModeActive) {
                toggleBatchMode();
            }

            // 创建表单并提交
            const form = document.createElement('form');
            form.method = 'post';
            form.action = '@Url.Action("BatchOperation")';

            // 添加防伪令牌
            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]');
            if (antiForgeryToken) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = antiForgeryToken.value;
                form.appendChild(tokenInput);
            }

            // 添加操作类型
            const operationInput = document.createElement('input');
            operationInput.type = 'hidden';
            operationInput.name = 'Operation';
            operationInput.value = 'download';
            form.appendChild(operationInput);

            // 添加当前目录ID
            const currentDirInput = document.createElement('input');
            currentDirInput.type = 'hidden';
            currentDirInput.name = 'CurrentDirectoryId';
            currentDirInput.value = '@Model.CurrentDirectoryId';
            form.appendChild(currentDirInput);

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'FileIds';
                input.value = fileId;
                form.appendChild(input);
            });

            document.body.appendChild(form);
            form.submit();
        });

        // 批量移动
        document.getElementById('batchMoveBtn')?.addEventListener('click', function(e) {
            e.preventDefault();

            const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked')).map(cb => cb.value);
            const selectedDirectories = Array.from(document.querySelectorAll('.directory-checkbox:checked')).map(cb => cb.value);

            if (selectedFiles.length === 0 && selectedDirectories.length === 0) {
                alert('请选择要移动的文件或文件夹');
                return;
            }

            // 构建URL
            let url = '@Url.Action("SelectDestination")';
            url += '?currentDirectoryId=@Model.CurrentDirectoryId';

            // 添加选中的文件ID
            selectedFiles.forEach(fileId => {
                url += `&fileIds=${fileId}`;
            });

            // 添加选中的目录ID
            selectedDirectories.forEach(dirId => {
                url += `&directoryIds=${dirId}`;
            });

            window.location.href = url;
        });

        // 监听复选框变化
        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('file-checkbox') || e.target.classList.contains('directory-checkbox')) {
                updateBatchActionButtons();
            }
        });
    </script>
}
